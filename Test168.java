/*	===========================
	■■자바 입출력■■				168~172 이해하여 입출력 완벽!!!이해
2021-08-17
	=========================== */

/*
●자바의 기본 입출력 개요

- 자바에서의 모든 데이터 입출력은 『stream』이라는 개념에 의해 이루어지는데  『stream』이라는 단어의 사전적의미는
	"흐르는 물"의 개념이며, 이는 연속된 일련의 데이터를 일컫는다

-  데이터 입출력 시 모든 데이터를 형태와 관계없이 일련된 흐름으로 전송을 하는 것이 스트림 입출력 모델의 기본 개념이다

- 기본적으로  『stream』에는 바이트 기반의 스트림과 문자 기반의 스트림이 있다

● 바이트 스트림 (byte - stream)입출력
-InputStream클래스와OuputStream클래스,그리고 이들의 하위클래스 통해서 제공되는 바이트 스트림을 위한 표준 입출력으로 
	8비트 크기를 갖는 바이트들의 스트림이 입출력된다(바이트,바이트배열,정수 등)

●문자 스트림 입출력

- Reader클래스와Write클래스, 그리고 이들의 하위클래스에 의해 구현되었으며, 8비트 크기를 갖는 바이트들의 스트림이 아닌
	16비트 크기를 갖는 유니코드 문자들의 스트림이라는 점에서 차이가 있다(문자, 문자배열,문자열)

※ 스트림의 특징
-스트림은 FIFO구조이다 ==>(Queue구조)
	FIFO구조란, 먼저 들어간 것이 먼저 나오는 형태로 스트림의 데이터는 순차적으로 흘러가며 순차적 접근 밖에는 허용되지 않는다

- 스트림은 단방향이다
	-자바에서 스트림은 읽기 쓰기가 동시에 이루어지지 않는다
	따라서 읽기쓰기가 필요하다면 읽는 스트림과 쓰는 스트림을 하나씩 열어서 사용해야한다

-스트림은 지연될 수 있다.
	스트림에 넣어진 데이터는 처리되기 전에는 스트림에 사용되는 스레드는 지연(blocking)상태에 빠진다 (물이 흐르는와중에 수도꼭지가 잠김)
	네트워크 상에서 데이터가 모두 전송되기 전까지 스레드는 지연 상태가 된다
*/

//Test 170비교
import java.io.IOException;
public class Test168
{
	public static void main(String[] args) throws IOException
	{
		int data;
		char ch;
	
		
		System.out.println("문자열 입력 (종료: Ctrl + z)");	// Ctrl + z 하면 종료
	
		//read(); : InputStream클래스의 대표적 메소드(-> 바이트 스트림)
		
		while ((data = System.in.read()) != -1)		//아스키코드가 담김
		{
			ch = (char)data;
			/*System.out.print(ch);
			/*
				문자열 입력 (종료: Ctrl + z)
				abcd		//출력
				abcd		//값
				1234		//출력
				1234		//값
				가나다라	//출력
				°¡³ª´?¶?	//값
				=> 바이트 스트림으로 해야한다 『한글문자는 문제가 된다 == 한글자당 2바이트 차지』
			*/

			//write(): OutputStream클래스의 대표적 메소드(-> 바이트 스트림)
			System.out.write(ch);
			/*
				문자열 입력 (종료: Ctrl + z)
				abcd
				abcd
				1234
				1234
				가나다라
				가나다라
			=> write로 하여 글자 ok
			*/
		}	
	}
}