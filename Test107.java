/*==============================================
	■■■ 클래스 고급■■■
-상속(Inheritance)
================================================*/
/*
○ 상속(Inheritance)이란
	새로 설계(생성) 하고자 하는 클래스가
	이미 설계되어 있는 다른 클래스의 기능과 중복되는경우
	이미 설계된 클래스의 일부분이나 전체 구조를 공유 할 수있도록 하는 기능을 의미

즉, 상속은 객체를 좀 더 쉽게 만들 수 있는
고수준의 재사용성을 확보하고
객체간의 관계를 구성함으로써
객체 지향의 또 다른 큰 특징인 『다형성』의 문법적 토대가 된다

상속은 기존 프로그램의 클래스 내용을 공유함으로써
중복된 코드들을 재 작성 할 필요 없이
반복적이고 세부적인 작업을 처리 하지않기 때문에
프로그램을 작성하는 시간을 절약할 수 있고
유지보수를 편리하게 할 수 있으며,
프로그램의 길이도 짧아지게 된다

또한, 이미 작성된 프로그램들은 앞서 테스트되어
오류를 줄일 수 있어 현재 작성중인 프로그램에만 전념 할 수있다

<주의 할 점>
자바는 다,중,속,성을 지원하지 않기 때문에
두개 이상의 클래스로부터 상속 받을 수 없다

상위클래스 == 부모 클래스 == 조상클래스 == Super클래스 → 물려주는 클래스 
하위클래스 == 자식 클래스 == 자손클래스 == Sub클래스	→물려받는 클래스 (대상 결정)


★『super』
	static으로 선언되지 않은 메소드에서 사용되며
	현재 클래스가 상속받은 상위 클래스의 객체를 가리킨다
	super는 상위 클래스의 생성자를 호출하거나,
	상위 클래스의 멤버 변수 또는 메소드를 호출할 때 사용할 수 있다

	하위 클래스의 생성자에서 상위 클래스의 생성자를 호출할 때에는 
	하위 클래스의 생성자 정의 구문에서 맨 처음에만 위치 할 수 있다.
(이건 상속의 문법이 아니라 앞에서 공부한 생성자의 기본문법 ★)






*/



// 부모 클래스
class SuperTest107
{
	protected double area;
	//부모 클래스의 생성자
	SuperTest107()
	{
		System.out.println("Super class..");
	}
	void write(String title)
	{
		System.out.print(title + " - " + area);
	}
}


//자식 클래스
//※ 자바는 단일 상속만 지원되며, 다중상속은 허용되지 않는다. 
public class Test107 extends SuperTest107	//,superTest108,SuperTest109
{
	/*
	protected double area;-------------------------------------------------------------->부모로 부터 받은 area
																// 생성자는 제외
	void write(String title)
	{
		System.out.print(thitle + " - " + area);				//부모 area
	}
	*/


	//double area = 10.1234;		//---------------------------------------> 주석 처리를 하면 원 - 314.1592 즉.얘는 자식 내 area
		

	// 자식 클래스의 생성자
	Test107()
	{
		//부모 클래스 생성자 호출		(제일 먼저 실행되는 위치에서 호출~????????????????????????)
		//SuperTest107();				// this(); -> Test107(); ===> super -> SuperTest107

		super();//------------------->	//Super class..
										//Sub class...
										//계속하려면 아무 키나 누르십시오 . . .

		System.out.println("Sub class...");
		//super();    이 위치에는 에러~!
		//===>> 에러 발생(컴파일 에러)
	}

	public void circle()
	{
		int r =10;
		area = r *r * 3.141592;						// 내 area
		write("원");
	}
	
	public void rect()
	{
		int w=20, h=5;
		area = w * h;
		//SuperTest107.area = w * h;
		super.write ("사각형");	
		//SuperTest.write("사각형");
		
	}
	

	public static void main(String [] args)
	{
		//Test107 클래스(자식) 기반 인스턴스 생성
		Test107 ob = new Test107();

		ob.circle();
		//==>>원 - 314.1592		//104구문에 의해
		
		ob.rect();
		//==>>사각형 - 100.0
		
	}
}