/*==============================================
	■■■ 정렬(Sort) 알고리즘 ■■■
-향상된 버블 정렬(Bubble Sort)
================================================*/

/*
※ 앞서 공부한 Selection Sort(Test103) 나 Bubble Sort(Test104) 의 성능은 같다. (반복의 횟수로 추정)
    하지만, 향상된 Bubble Sort 는 대상 데이터의 구조에 따라서
	 일반 Bubble Sort 나 Selection Sort 보다 성능이 좋다.
※ 불필요한 추가 연산 (회전:반복)을 수행하지 않는다.

원본 데이터 : 61 15 20 22 30
			: 15 20 22 30 61		1회전(스왑발생 -> true)-> 다음회전 진행  o	
			: 15 20 22 30 61		2회전 (스왑발생) -> false-> 담으회전 진행 x

==>1회전 수행 ,,,2회전수행,,,을 해보았더니
	2회전 스왑(자리바꿈)이 전혀 일어나지 않았기 떄문에
	불필요한 추가 연산(더 이상의 회전)은 무의미한 것으로 판단하여
	수행하지 않는다

//실행 예)
Source Data : 10 50 20 30 40
Sorted Data : 10 20 30 40 50
계속하려면 아무키나 누르세요..

	
	
*/
public class Test105

{

	public static void main(String[] args)

	{


		/*
		10 50 20 30 40   0 1
		== --
		10 20 50 30 40   1 2
		   == --
		10 20 30 50 40   2 3
			  == --
		10 20 30 40 50   3 4
				 == --
===============================================================1회전 -> 스왑발생
		10 20 30 40 50   0 1
		== --
		10 20 30 40 50   1 2
		   == --
		10 20 30 40 50   2 3
			  == --
===============================================================2회전 -> 스왑발생하지 않음
						X
						X
============================================================== 3회전 -> x
						X
============================================================== 4회전 -> x
		*/


		int[] a = {10, 50, 20, 30, 40};
		int go, temp;
		boolean flag;

		System.out.print("Source Data : ");
		for (int n : a)					// a 배열 [0]부터 끝까지 n에 순차적용
			System.out.print(n + " ");
		System.out.println();

		

		// 향상된 Bubble Sort 구현
		go = 0;
		do
		{

			flag=false;
			go++;
			for (int i=0; i<a.length-go; i++)
			{
				if (a[i] > a[i+1])
				{
					// 자리바꾸기
					temp = a[i];
					a[i] = a[i+1];
					a[i+1] = temp;

					flag=true;

					//-- 단 한 번이라도 자리바꿈 이 일어나면
					//   flag 변수는 true 로 변경
				}
			}
			System.out.println("웅~!!!");
			//웅~!!은 두번 일어남!!
		}

		while (flag);
		//스왑이 일어나지 않은 경우에 반복이 더 이상 일어나지 않으면 중단


   
		System.out.print("Sorted Data : ");
		for (int n : a)					// a 배열 [0]부터 끝까지 n에 순차적용
			System.out.print(n + " ");
		System.out.println();

	}

}

/*
Source Data : 10 50 20 30 40
웅~!!!
웅~!!!
Sorted Data : 10 20 30 40 50
계속하려면 아무 키나 누르십시오 . . .
*/
