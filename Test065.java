/*============================================================
■■■클래스와 인스턴스	■■■
===========================================================*/
/*
직사각형 클래스 설계
직사각형의 넓이와 둘레 계산, 클래스로 표현

클래스 정체성 → 직사각형
클래스의 속성 → 가로,세로, (넓이,둘레,부피,무게,제질,색깔..)	
클래스의 기능 → 넓이 계산, 둘레 계산, 가로세로입력, 결과출력

객체를 구성 → 데이터 (속성, 상태) + 기능 (동작, 행위)
	↓				↓						↓
클래스를 설계	→ 변수			   +    메소드


class 직사각형
{
	//데이터(속성, 상태)→ 변수
	int 가로 세로입력;

	//기능(동작, 행위) → 메소드

	가로세로 입력()
	{
	}

	둘레계산()
	{
	}

	넓이 계산()
	{
	}
}
*/
import java.util.Scanner;
 
class Rect
{		//직사각형 클래스 설계
 
        //데이터 ( 속성, 상태) → 변수
        int w, h;                //가로 세로
 
        //기능 (동작, 행위) →메소드
        void input()
		{						     //가로세로입력() 
                                    //사용자로 부터 가로,세로를 입력 받기 때문에 매개변수 필요없음
                                    // 반환값이 없으면 void 사용, 없을 때 아무것도 안쓰는 문법은 이미 생성자가 가지고 감
            
            Scanner sc = new Scanner(System.in);
 
            System.out.print("가로 입력:");
            w = sc.nextInt();
 
            System.out.print("세로 입력:");
            h = sc.nextInt();
            
        }
        int calArea()
		{							//넓이계산()//모두 멤버이기 때문에
                                    //넓이에 대한 변수가 없으니깐 return 값으로 int 로 곱해서 준다.//객체도 반환해줄수 있음
            int result=0;
            result= w * h ;
            return result;            //return 뒤에 적어 봤자 아무 의미 없음
 
        }
        int calLength()
		{            //둘레 계산()
 
            int result=0;			
            result = (w + h) *2;
            return result;
 
        }
        void print(int a, int l)   
		 {											//결과 출력()//매개변수 이름은 상관없다
 
            System.out.println("가로 : " + w);    //가로 : 10
            System.out.println("세로 : " + h);    //세로 : 20
            System.out.println("넓이 : " + a);    //넓이 : xxx
            System.out.println("둘레 : " + l);  //둘레 : xxx
        }
}

/*하나의 자바 파일(.java)에 여러개의 클래스(class)를 만들 수 있다.
하지만 『public class』하나만 올 수있다
파일을 저장할때의 이름은
이  『public class』의 이름으로 지정해서 저장해야한다
일반적으로 하나의 파일에 하나의 클래스를 설계해야한다.
또하느 여러개의 클래스가 설계된 파일을 컴파일 하게 되며
내부의 설계된 클래스의 수 만큼 클래스 파일(.class)이 파생된다*/
public class Test065{
 
    public static void main(String[] args){
 
        //Rect 인스턴스 생성 -- Rect를 사용하려면 객체를 생성해야한다./이제 붕어빵
        Rect ob = new Rect();					
 
        //생성된 인스턴ob를 통한 입력 메소드 호출
        ob.input();	//===========================================================================> 아직은 가로 세로 입력만 호출 하게 된다 
 
        //생성된 인스턴스 ob를 통한 넓이 연산 메소드 호출
         int area = ob.calArea();				 //→메소드 호출로 얻어낸 값을 담아낼 준비
        
        //생성된 인스턴스 ob를 통한 둘레 연산 메소드 호출
         int length = ob.calLength();			//→ 메소드 호출로 얻어낸 값을 담아낼 준비
 
         //생성된 인스턴스 ob를 통한 결과 메소드 호출
         ob.print(area , length);				
 
    }
}

/*가로 입력:10
세로 입력:15
가로 : 10
세로 : 15
넓이 : 150
둘레 : 50
계속하려면 아무 키나 누르십시오 . . .*/