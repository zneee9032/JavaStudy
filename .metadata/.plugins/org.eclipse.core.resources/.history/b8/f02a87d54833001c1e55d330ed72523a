/*================================
 * ■■■클래스와 인스턴스■■■
 * 
 *직사각형 클래스 설계
 *
 *내용 : 직사각형의 넓이와 둘레를 계산,클래스로 표현
 * 클래스의 정체성 : 직사각형
 * 클래스의 속성 : 가로,세로(넓이,둘레,무게,색상,재질)
 * 클래스의 기능 : 넓이계산,둘레 계산, 가로//세로 입력 결과출력
 ================================*/
//객체를 구성 -> 데이터(속성, 상태) + 기능(행위,동작)

//클래스를 구성 -> 변수     			메소드

//하나의 파이에 여러 개의 클래스를 설계하는것은 가능하다.
//여러개의 클래스 중 『public』이라는 '접근 제시자'를 붙일 수 있는건 오로지 하나만 가능하다
//cf. main()의 여부와 상관없음

class Rect //직사각형 클래스 설계
{
	//변수 선언(가로/세로)
	//전역변수- 클래스의 모든 영역 안에서 글로벌 활동이 가능한 변수
	//멤버변수- 클래스에 소속되어 있는 요소로써의 의미
	//인스턴스 변수 - (1): 인스턴스가 생성되었을때 비로소 메모리 할당이 이뤄지는 변수
	//				  (2): 생성된 인스턴스를 통해 접근 가능한 변수
	int w,h;
	
	//메소드의 정의 순서에 우선수위 없음 - 자바는 메소드 안에서만 순차적으로 실행 될 뿐.
	//													--메소드 밖에서는 정의의 순서가 상관 없다.
	
	//○메소드 정의 (가로 세로입력)
	//-메소드 이름 명명
	//매개변수 구성
	//반환 자료형 구성
	//메소드 내부 정의
	//『void』는 메소드 실행 후 메소드를 호출한 곳에
	//			결과를 돌려줄 필요가 없을때 지정하여 사용하게 되는데
	//			아무것도 돌려주지(반환하지) 않는다고 해서
	// 			반환 자료형을 명시하지 않게 되면 문법적인 에러가 발생하게 된다.
	//			(반환 자료형을 명시하지 않는 문법은 생성자에서 선점!!)

	void input()
	{
		//Scanner인스턴스 생성
		Scanner sc = new Scanner(System.in)
	}
	
	
}

/*---------------------------------------------------------------------
 * ※하나의 자바 파일(.java)에 여러개의 클래스를 만들수 있다
 * 하지만 『public class』는 하나만 올 수 있다.
 * 파일을 저장할 때의 이름은 이 『public class』의 이름으로 지정하거나
 * 구성된 모든 클래스가 『public class』가 아닐 경우,
 * 이들 중 파일을 대표할 수 있는 클래스를 선택하여
 * 해당 클래스의 이름으로 지정해야한다
 * 
 * 	또한, 여러개의 클래스가 설계 된 하나의 파일을 컴파일하게 되면
 * 	내부에 설계된 클래스의 수만큼 클래스 파일(.class)이 파생된다
 ----------------------------------------------------------------------*/

package

import java.util.Scanner;

JavaSstudy01;

public class Test065
{
	public static void main (String [] args)
	{
	//Rect클래스 인스턴스 생성
	Rect ob = new Rect();			//생성된 첫 번째 사각형
	
	//입력 메소드 호출
	ob.input();						//cf.br.readLine();과 유사
	
	//넓이 계산, 둘레 계산 메소드 호출
	int area = ob.calArea();
	int length = ob.calLength();
	
	//결과 출력 메소드 호출
	ob.print(area,length);
	}
}
